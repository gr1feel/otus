{
	"info": {
		"_postman_id": "72edfffa-b279-467d-8155-f1ca55e15a9d",
		"name": "UserAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Создание студента",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"studentId\", responseBody)",
							"",
							"pm.test(\"Проверяем статус\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Идентификатор пользователя больше нуля\", function () {",
							"     var studentId = parseInt(pm.collectionVariables.get(\"studentId\"));",
							"     pm.expect(studentId > 0).to.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"Марк\",\n  \"lastName\": \"Твен\",\n  \"age\": 90\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/student",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение студента",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"studentId\", responseJSON[\"id\"])",
							"",
							"pm.test(\"Проверяем статус\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Идентификатор пользователя больше нуля\", function () {",
							"     var studentId = parseInt(pm.collectionVariables.get(\"studentId\"));",
							"     pm.expect(studentId > 0).to.true;",
							"});",
							"",
							"pm.test(\"Validate Age\", function () {",
							"     var age = responseJSON[\"age\"];",
							"     pm.expect(age).to.eql(90);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/student/{{studentId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"student",
						"{{studentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление студента",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"studentId\", responseBody)",
							"",
							"pm.test(\"Проверяем статус\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Идентификатор пользователя больше нуля\", function () {",
							"     var studentId = parseInt(pm.collectionVariables.get(\"studentId\"));",
							"     pm.expect(studentId > 0).to.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"Марк\",\n  \"lastName\": \"Твен\",\n  \"age\": 50\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/student/{{studentId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"student",
						"{{studentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение студента (проверка обновления)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"studentId\", responseJSON[\"id\"])",
							"",
							"pm.test(\"Проверяем статус\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Идентификатор пользователя больше нуля\", function () {",
							"     var studentId = parseInt(pm.collectionVariables.get(\"studentId\"));",
							"     pm.expect(studentId > 0).to.true;",
							"});",
							"",
							"pm.test(\"Validate Age\", function () {",
							"     var age = responseJSON[\"age\"];",
							"     pm.expect(age).to.eql(50);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/student/{{studentId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"student",
						"{{studentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление студента",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверяем статус\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Студент удален\", function () {",
							"    pm.expect(responseBody).to.eql(\"OK\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/student/{{studentId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"student",
						"{{studentId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "studentId",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "arch.homework"
		}
	]
}